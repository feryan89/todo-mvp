version: 2

references:

 ## Cache

  cache_key: &cache_key
    key: cache-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

  restore_cache: &restore_cache
    restore_cache:
      <<: *cache_key

  save_cache: &save_cache
    save_cache:
      <<: *cache_key
      paths:
        - ~/.gradle
        - ~/.m2

## Workspace

  workspace: &workspace
    ~/workspace

  attach_debug_workspace: &attach_debug_workspace
    attach_workspace:
      at: *workspace

  persist_debug_workspace: &persist_debug_workspace
      persist_to_workspace:
        root: *workspace
        paths:
          - app/build/outputs/androidTest-results
          - app/build/outputs/apk
          - app/build/outputs/code-coverage
          - app/build/test-results

  attach_release_workspace: &attach_release_workspace
    attach_workspace:
      at: *workspace

  persist_release_workspace: &persist_release_workspace
    persist_to_workspace:
      root: *workspace
      paths:
        - app/build

  attach_firebase_workspace: &attach_firebase_workspace
    attach_workspace:
      at: *workspace

  persist_firebase_workspace: &persist_firebase_workspace
    persist_to_workspace:
      root: *workspace
      paths:
        - firebase

## Docker image configurations

  android_config: &android_config
    working_directory: *workspace
    docker:
      - image: circleci/android:api-27-alpha
    environment:
      TERM: dumb

  gcloud_config: &gcloud_config
    working_directory: *workspace
    docker:
      - image: google/cloud-sdk:latest
    environment:
      TERM: dumb
## Keys

  # Android Key Store

  export_android_key: &export_release_keystore
    run:
      name: Export Release Keystore
      command: echo 'export RELEASE_JKS="$RELEASE_JKS"' >> $BASH_ENV

  decode_android_key: &decode_release_keystore
    run:
      name: Decode Release keystore
      command: echo $RELEASE_JKS | base64 -di > keystore/release.jks

  # Google Services

  export_gservices_key: &export_gservices
    run:
      name: Export Google Services
      command: echo 'export GOOGLE_SERVICES="$GOOGLE_SERVICES"' >> $BASH_ENV

  decode_gservices_key: &decode_gservices
    run:
      name: Decode Google Services
      command: echo $GOOGLE_SERVICES | base64 -di > app/google-services.json

  # Gradle Properties

  export_fabric_key: &export_gradle_properties
    run:
      name: Export Gradle Properties
      command: echo 'export GRADLE_PROPERTIES="$GRADLE_PROPERTIES"' >> $BASH_ENV
  decode_fabric_key: &decode_gradle_properties
    run:
      name: Decode Gradle Properties
      command: echo $GRADLE_PROPERTIES | base64 -di > gradle.properties


jobs:

  ## Build debug APK and instrumented test APK

  build_debug:
    <<: *android_config
    steps:
      - checkout
      - *export_release_keystore
      - *decode_release_keystore
      - *export_gservices
      - *decode_gservices
      - *export_gradle_properties
      - *decode_gradle_properties
      - *restore_cache
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - *save_cache
      - run:
          name: Gradle build (debug)
          command: ./gradlew -PciBuild=true :app:assembleDebug :app:assembleAndroidTest
      - *persist_debug_workspace
      - store_artifacts:
                path: app/build/outputs/apk/
                destination: /apk/

  ## Build release APK

  build_release:
    <<: *android_config
    steps:
      - checkout
      - *export_release_keystore
      - *decode_release_keystore
      - *export_gservices
      - *decode_gservices
      - *export_gradle_properties
      - *decode_gradle_properties
      - *restore_cache
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - *save_cache
      - run:
          name: Gradle build (release)
          command: ./gradlew -PciBuild=true :app:assembleRelease
      - *persist_release_workspace
      - store_artifacts:
          path: app/build/outputs/apk/
          destination: /apk/
      - store_artifacts:
          path: app/build/outputs/mapping/
          destination: /mapping/

  ## Run unit tests

  test_unit:
    <<: *android_config
    steps:
      - checkout
      - *export_release_keystore
      - *decode_release_keystore
      - *export_gservices
      - *decode_gservices
      - *export_gradle_properties
      - *decode_gradle_properties
      - *restore_cache
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - *save_cache
      - run:
          name: Run unit tests
          command: ./gradlew -PciBuild=true :app:testDebugUnitTest
      - *persist_debug_workspace
      - store_artifacts:
          path: app/build/reports/
          destination: /reports/
      - store_test_results:
          path: app/build/test-results/
          destination: /test-results/


workflows:
  version: 2
  workflow:
    jobs:
      - build_debug
      - build_release
      - test_unit
apply plugin: 'jacoco'
def coverageSourceDirs = [
        'src/main/java',
        'src/debug/java'
]
task jacocoTestReport(type: JacocoReport, dependsOn: 'testDebugUnitTest') {
    description = 'Generate JaCoCo coverage reports'
    group = 'Reporting'

    reports {
        xml.enabled = true
        html.enabled = true
    }

    classDirectories = fileTree(
            dir: 'build/intermediates/classes/debug',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*_MembersInjector.*',
                       '**/*_ViewBinding*.*',
                       '**/BuildConfig.*',
                       '**/Manifest*.*',
                       '*/*$Lambda$*.class',
                       '**/*.class#lamda*',
                       'com/todo/di/**',
            ]
    )

    sourceDirectories = files(coverageSourceDirs)
    executionData = fileTree(
            dir: "$buildDir",
            include: ['jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec']
    )

    doFirst {
        files('build/intermediates/classes/debug').getFiles().each { file ->
            if (file.name.contains('$$')) {
                file.renameTo(file.path.replace('$$', '$'))
            }
        }
    }
}

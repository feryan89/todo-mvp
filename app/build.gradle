apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.github.ben-manes.versions'
apply from: "$project.rootDir/code_quality_tools/script-findbugs.gradle"
apply from: "$project.rootDir/code_quality_tools/script-pmd.gradle"
apply from: "$project.rootDir/code_quality_tools/script-lint.gradle"
apply from: "$project.rootDir/code_quality_tools/script-jacoco.gradle"

check.dependsOn 'findbugs', 'pmd', 'lint'
android {

    compileSdkVersion project.ext.compileSdkVersion
    buildToolsVersion project.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.todo"
        minSdkVersion project.ext.minSdkVersion
        targetSdkVersion project.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        manifestPlaceholders = [fabric_api_key: project.property('fabric.api.key')]
    }

    signingConfigs {
        debug {
            keyAlias project.property('debug.key.alias')
            keyPassword project.property('debug.key.password')
            storePassword project.property('debug.store.password')
            storeFile file(project.property('debug.store.file'))
        }
        release {
            keyAlias project.property('release.key.alias')
            keyPassword project.property('release.key.password')
            storePassword project.property('release.store.password')
            storeFile file(project.property('release.store.file'))
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), "$project.rootDir/proguard/rules-proguard.pro"
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), "$project.rootDir/proguard/rules-proguard.pro"
            signingConfig signingConfigs.release
        }


    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

def supportLibVersion = "27.1.1"
def constraintLayoutVersion = "1.1.0"
def firebaseVersion = "15.0.0"
def jobDispatcher = "0.8.5"
def rxJava2Version = "2.1.12"
def rxAndroid2Version = "2.0.2"
def rxBinding2Version = "2.1.1"
def timberVersion = "4.7.0"
def butterKnifeVersion = "8.8.1"
def daggerVersion = "2.15"
def crashlyticsVersion = "2.9.2"
def junitVersion = "4.12"
def mockitoVersion = "1.10.19"
def runnerVersion = "1.0.2"
def rulesVersion = "1.0.2"
def espressoVersion = "3.0.2"


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:' + supportLibVersion
    implementation 'com.android.support:recyclerview-v7:' + supportLibVersion
    implementation 'com.android.support:cardview-v7:' + supportLibVersion
    implementation 'com.android.support:design:' + supportLibVersion
    implementation 'com.android.support.constraint:constraint-layout:' + constraintLayoutVersion
    implementation 'com.google.firebase:firebase-core:' + firebaseVersion
    implementation 'com.google.firebase:firebase-auth:' + firebaseVersion
    implementation 'com.google.firebase:firebase-database:' + firebaseVersion
    implementation 'com.firebase:firebase-jobdispatcher:' + jobDispatcher
    implementation 'io.reactivex.rxjava2:rxjava:' + rxJava2Version
    implementation 'io.reactivex.rxjava2:rxandroid:' + rxAndroid2Version
    implementation 'com.jakewharton.rxbinding2:rxbinding:' + rxBinding2Version
    implementation 'com.jakewharton.rxbinding2:rxbinding-design:' + rxBinding2Version
    implementation 'com.jakewharton.timber:timber:' + timberVersion
    implementation 'com.jakewharton:butterknife:' + butterKnifeVersion
    annotationProcessor 'com.jakewharton:butterknife-compiler:' + butterKnifeVersion
    implementation 'com.google.dagger:dagger:' + daggerVersion
    annotationProcessor 'com.google.dagger:dagger-compiler:' + daggerVersion
    implementation('com.crashlytics.sdk.android:crashlytics:' + crashlyticsVersion + '@aar') {
        transitive = true
    }
    implementation 'com.android.support.test.espresso:espresso-idling-resource:' + espressoVersion

    // Dependencies for local unit tests

    testImplementation 'junit:junit:' + junitVersion
    testImplementation 'org.mockito:mockito-all:' + mockitoVersion

    // Dependencies for Android unit tests

    androidTestImplementation 'junit:junit:' + junitVersion
    androidTestImplementation 'com.android.support.test:runner:' + runnerVersion
    androidTestImplementation 'com.android.support.test:rules:' + rulesVersion
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:' + espressoVersion
    androidTestImplementation 'com.android.support.test.espresso:espresso-intents:' + espressoVersion
    androidTestImplementation 'com.android.support:support-annotations:' + supportLibVersion

    // Resolve conflicts between main and test APK:

    androidTestImplementation 'com.android.support:support-annotations:' + supportLibVersion
    androidTestImplementation 'com.android.support:appcompat-v7:' + supportLibVersion
    androidTestImplementation 'com.android.support:recyclerview-v7:' + supportLibVersion
    androidTestImplementation 'com.android.support:cardview-v7:' + supportLibVersion
    androidTestImplementation 'com.android.support:design:' + supportLibVersion

}
apply plugin: 'com.google.gms.google-services'